import * as cdk from 'aws-cdk-lib';
import * as glue from 'aws-cdk-lib/aws-glue';

export interface AwsCdkGlueProps extends cdk.StackProps {
  /**
   * Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
   * @default '/cdk-bootstrap/hnb659fds/version'
   */
  readonly bootstrapVersion?: string;
}

export class AwsCdkGlue extends cdk.Stack {
  public constructor(scope: cdk.App, id: string, props: AwsCdkGlueProps = {}) {
    super(scope, id, props);

    // Applying default props
    props = {
      ...props,
      bootstrapVersion: new cdk.CfnParameter(this, 'BootstrapVersion', {
        type: 'AWS::SSM::Parameter::Value<String>',
        default: props.bootstrapVersion?.toString() ?? '/cdk-bootstrap/hnb659fds/version',
        description: 'Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]',
      }).valueAsString,
    };

    // Resources
    const myConnection5621880D = new glue.CfnConnection(this, 'MyConnection5621880D', {
      catalogId: this.account,
      connectionInput: {
        connectionProperties: {
          'JDBC_CONNECTION_URL': 'jdbc:mysql://mysql.example.com:3306',
          USERNAME: 'username',
          PASSWORD: 'password',
        },
        connectionType: 'JDBC',
        name: 'my_connection',
      },
    });

    const myDatabase1E2517db = new glue.CfnDatabase(this, 'MyDatabase1E2517DB', {
      catalogId: this.account,
      databaseInput: {
        name: 'my_database',
      },
    });

    if (myConnection5621880D == null) { throw new Error(`A combination of conditions caused 'myConnection5621880D' to be undefined. Fixit.`); }
    if (myDatabase1E2517db == null) { throw new Error(`A combination of conditions caused 'myDatabase1E2517db' to be undefined. Fixit.`); }
    const myTableWithCustomLocationTable43A19d42 = new glue.CfnTable(this, 'MyTableWithCustomLocationTable43A19D42', {
      catalogId: this.account,
      databaseName: myDatabase1E2517db.ref,
      tableInput: {
        description: 'custom_location_table generated by CDK',
        name: 'custom_location_table',
        parameters: {
          classification: 'json',
          'has_encrypted_data': true,
          connectionName: myConnection5621880D.ref,
        },
        storageDescriptor: {
          columns: [
            {
              name: 'col1',
              type: 'string',
            },
            {
              comment: 'col2 comment',
              name: 'col2',
              type: 'string',
            },
            {
              name: 'col3',
              type: 'array<string>',
            },
            {
              name: 'col4',
              type: 'map<string,string>',
            },
            {
              name: 'col5',
              type: 'struct<col1:string>',
            },
          ],
          compressed: false,
          inputFormat: 'org.apache.hadoop.mapred.TextInputFormat',
          location: 'default_db.public.test',
          outputFormat: 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat',
          serdeInfo: {
            serializationLibrary: 'org.openx.data.jsonserde.JsonSerDe',
          },
          storedAsSubDirectories: false,
        },
        tableType: 'EXTERNAL_TABLE',
      },
    });
  }
}

